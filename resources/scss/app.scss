@use "modern-normalize";

@use "@material/web/typography/typescale";
@use "@material/web/tokens/md-sys-typescale" as typescale-tokens;
@use "@material/web/tokens/md-sys-shape" as shape;

@use "animations";
@use "fonts";
@use "material";
@use "auth";
@use "authenticated";

// Material theme generated from:
// https://material-foundation.github.io/material-theme-builder/?primary=%234970B0&neutral=%237991C6&neutralVariant=%235F90E1&colorMatch=false
@import 'theme/light.css' screen and (prefers-color-scheme: light);
@import 'theme/light-mc.css' screen and (prefers-color-scheme: light) and (prefers-contrast: less);
@import 'theme/light-hc.css' screen and (prefers-color-scheme: light) and (prefers-contrast: more);
@import 'theme/dark.css' screen and (prefers-color-scheme: dark);
@import 'theme/dark-mc.css' screen and (prefers-color-scheme: dark) and (prefers-contrast: less);
@import 'theme/dark-hc.css' screen and (prefers-color-scheme: dark) and (prefers-contrast: more);

:root {
  @include typescale.theme(typescale-tokens.values($exclude-custom-properties: true));

  $shape-tokens: shape.values($exclude-custom-properties: true);

  @each $token, $value in $shape-tokens {
    --md-sys-shape-#{$token}: #{$value};
  }

  --md-ref-typeface-brand: 'Rethink Sans';
  --md-ref-typeface-plain: 'Reddit Sans';
}

body {
  @extend .md-typescale-body-medium;

  color: var(--md-sys-color-on-background);
  background-color: var(--md-sys-color-background);
}


label:has(> md-checkbox) {
  display: flex;
  align-items: center;
}

md-text-button.link {
  --md-text-button-container-height: 10px;
  --md-text-button-container-shape: 6px;

  padding: 4px;

  &.inline {
    --md-text-button-label-text-line-height: inherit;

    padding: 0;
  }
}

.center-flex-wrap {
  display: flex;
  flex-flow: row wrap;
  gap: 1rem;
  align-items: center;
  justify-content: center;
}

#app {
  display: flex;
  flex-direction: column;
  min-height: 100vh;

  .root, main {
    flex: 1;
    width: 100%;
  }
}

// Auth styles
html:has(main.auth) {
  @include auth.auth;
}

// Authenticated styles
html:has(main.authenticated) {
  @include authenticated.authenticated;
}
