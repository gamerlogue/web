name: Build and Push Docker image

on:
  push:
    branches:
      - '**'
  release:
    types:
      - published
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY_HOST: ghcr.io
  REGISTRY_IMAGE: ${{ github.repository }}
  APP_ENV: prod

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Prepare tags and image name
        id: prep
        shell: bash
        run: |
          set -euo pipefail
          HOST="${{ env.REGISTRY_HOST }}"
          FULL="${REGISTRY_IMAGE:-$GITHUB_REPOSITORY}"
          IMAGE_LC="${FULL,,}"
          # Export normalized image path for subsequent steps
          echo "REGISTRY_IMAGE=${IMAGE_LC}" >> "$GITHUB_ENV"

          if [ "${{ github.event_name }}" = "release" ]; then
            TAG="${{ github.event.release.tag_name }}"
            TAG1="${HOST}/${IMAGE_LC}:${TAG}"
            TAG2="${HOST}/${IMAGE_LC}:latest"
          else
            SHORT_SHA="$(git rev-parse --short=7 "${GITHUB_SHA}")"
            TAG1="${HOST}/${IMAGE_LC}:edge"
            TAG2="${HOST}/${IMAGE_LC}:${SHORT_SHA}"
          fi

          {
            echo "image=${HOST}/${IMAGE_LC}"
            echo "tags<<EOF"
            echo "${TAG1}"
            echo "${TAG2}"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_HOST }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          target: prod
          cache-from: type=gha
          cache-to: type=gha,mode=max
